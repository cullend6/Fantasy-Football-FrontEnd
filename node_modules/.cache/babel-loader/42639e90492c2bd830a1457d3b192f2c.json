{"ast":null,"code":"// export default function addToTeam(player, goalkeepers, midfielders, defenders, forwards) {\n//     const { element_type } = player\n//     if (element_type === 1) {\n//         if( goalkeepers.length === 2 ) {\n//             goalkeepers.shift()\n//             setGoalkeepers([...goalkeepers, player])\n//         } else {\n//             setGoalkeepers(goalkeepers => [...goalkeepers, player])\n//         }\n//     } else if (element_type === 2) {\n//         if( defenders.length === 5 ) {\n//             defenders.shift()\n//             setDefenders([...defenders, player])\n//         } else {\n//             setDefenders(defenders => [...defenders, player])\n//         }\n//     } else if (element_type === 3) {\n//         if( midfielders.length >= 5 ) {\n//             setTeamValue(teamValue - midfielders.shift().now_cost)\n//             setMidfielders([...midfielders, player])\n//         } else {\n//             setMidfielders(midfielders => [...midfielders, player])\n//         }\n//     } else {\n//         if( forwards.length === 3 ) {\n//             forwards.shift()\n//             setForwards([...forwards, player])\n//         } else {\n//             setForwards(forwards => [...forwards, player])\n//         }\n//     }\n// }\nexport default function addToTeam(player, team, maxAmount) {\n  return addPlayerToPosition(player, team, maxAmount); // const { element_type: position } = player\n  // const { goalkeepers, defenders, midfielders, forwards } = team\n  // switch (position) {\n  //     case 1:\n  //         return addPlayerToPosition(player, goalkeepers, 2)\n  //     case 2:\n  //     //     return addDefOrMid(player, defenders)\n  //     // case 3:\n  //     //     return addDefOrMid(player, midfielders)\n  //     // case 4:\n  //     //     return addFwd(player, forwards)\n  //     }\n}\n\nconst addPlayerToPosition = (player, currentPlayers, maxAmount) => {\n  if (currentPlayers.length === maxAmount) {\n    currentPlayers.shift();\n    return [...currentPlayers, player];\n  }\n\n  return [...currentPlayers, player];\n}; // const addGk = (player, goalkeepers) => {\n//     if( goalkeepers.length === 2 ) {\n//         goalkeepers.shift()     \n//         return ([...goalkeepers, player])\n//     } \n//     console.log([...goalkeepers, player])\n//     return [...goalkeepers, player]\n// }\n// const addDefOrMid = (player, currentPlayers) => {\n//     if( currentPlayers.length === 5 ) {\n//         currentPlayers.shift()     \n//         return ([...goalkeepers, player])\n//     } \n//     console.log([...goalkeepers, player])\n//     return [...goalkeepers, player]\n// }","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\utils\\teamBuilderUtils.js"],"names":["addToTeam","player","team","maxAmount","addPlayerToPosition","currentPlayers","length","shift"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4C;AACvD,SAAOC,mBAAmB,CAACH,MAAD,EAASC,IAAT,EAAeC,SAAf,CAA1B,CADuD,CAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAGD,MAAMC,mBAAmB,GAAG,CAACH,MAAD,EAASI,cAAT,EAAyBF,SAAzB,KAAuC;AAC/D,MAAIE,cAAc,CAACC,MAAf,KAA0BH,SAA9B,EAA0C;AACtCE,IAAAA,cAAc,CAACE,KAAf;AACA,WAAQ,CAAC,GAAGF,cAAJ,EAAoBJ,MAApB,CAAR;AACH;;AACD,SAAO,CAAC,GAAGI,cAAJ,EAAoBJ,MAApB,CAAP;AACH,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// export default function addToTeam(player, goalkeepers, midfielders, defenders, forwards) {\r\n//     const { element_type } = player\r\n//     if (element_type === 1) {\r\n//         if( goalkeepers.length === 2 ) {\r\n//             goalkeepers.shift()\r\n//             setGoalkeepers([...goalkeepers, player])\r\n//         } else {\r\n//             setGoalkeepers(goalkeepers => [...goalkeepers, player])\r\n//         }\r\n//     } else if (element_type === 2) {\r\n//         if( defenders.length === 5 ) {\r\n//             defenders.shift()\r\n//             setDefenders([...defenders, player])\r\n//         } else {\r\n//             setDefenders(defenders => [...defenders, player])\r\n//         }\r\n//     } else if (element_type === 3) {\r\n//         if( midfielders.length >= 5 ) {\r\n//             setTeamValue(teamValue - midfielders.shift().now_cost)\r\n//             setMidfielders([...midfielders, player])\r\n//         } else {\r\n//             setMidfielders(midfielders => [...midfielders, player])\r\n//         }\r\n//     } else {\r\n//         if( forwards.length === 3 ) {\r\n//             forwards.shift()\r\n//             setForwards([...forwards, player])\r\n//         } else {\r\n//             setForwards(forwards => [...forwards, player])\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default function addToTeam(player, team, maxAmount) {\r\n    return addPlayerToPosition(player, team, maxAmount)\r\n    // const { element_type: position } = player\r\n    // const { goalkeepers, defenders, midfielders, forwards } = team\r\n    // switch (position) {\r\n    //     case 1:\r\n    //         return addPlayerToPosition(player, goalkeepers, 2)\r\n    //     case 2:\r\n    //     //     return addDefOrMid(player, defenders)\r\n    //     // case 3:\r\n    //     //     return addDefOrMid(player, midfielders)\r\n    //     // case 4:\r\n    //     //     return addFwd(player, forwards)\r\n    //     }\r\n}\r\n\r\n\r\nconst addPlayerToPosition = (player, currentPlayers, maxAmount) => {\r\n    if( currentPlayers.length === maxAmount ) {\r\n        currentPlayers.shift()     \r\n        return ([...currentPlayers, player])\r\n    } \r\n    return [...currentPlayers, player]\r\n}\r\n\r\n// const addGk = (player, goalkeepers) => {\r\n//     if( goalkeepers.length === 2 ) {\r\n//         goalkeepers.shift()     \r\n//         return ([...goalkeepers, player])\r\n//     } \r\n//     console.log([...goalkeepers, player])\r\n//     return [...goalkeepers, player]\r\n// }\r\n\r\n// const addDefOrMid = (player, currentPlayers) => {\r\n//     if( currentPlayers.length === 5 ) {\r\n//         currentPlayers.shift()     \r\n//         return ([...goalkeepers, player])\r\n//     } \r\n//     console.log([...goalkeepers, player])\r\n//     return [...goalkeepers, player]\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}