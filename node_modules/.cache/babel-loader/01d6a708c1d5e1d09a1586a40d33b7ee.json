{"ast":null,"code":"import axios from 'axios';\nexport default async function queryBackEnd(query, type) {\n  if (type === 'team') {\n    const result = await updatePlayerNames(query);\n    return result;\n  }\n\n  return getPlayer(query);\n}\n\nconst updatePlayerNames = async Id => {\n  try {\n    const _ref = await axios.get(\"http://localhost:5000/teams/\".concat(Id)),\n          playerNames = _ref.data;\n\n    return playerNames;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst getPlayer = async playerId => {\n  try {\n    const _ref2 = await axios.get(\"http://localhost:5000/players/\".concat(playerId)),\n          data = _ref2.data;\n\n    console.log('http://localhost:5000/players/${playerId}');\n    console.log(data);\n    return data[0];\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\modules\\PlayerSelector.js"],"names":["axios","queryBackEnd","query","type","result","updatePlayerNames","getPlayer","Id","get","playerNames","data","e","console","log","playerId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,YAAf,CAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACpD,MAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,UAAMC,MAAM,GAAG,MAAMC,iBAAiB,CAACH,KAAD,CAAtC;AACA,WAAOE,MAAP;AACH;;AACD,SAAOE,SAAS,CAACJ,KAAD,CAAhB;AACH;;AAED,MAAMG,iBAAiB,GAAG,MAAOE,EAAP,IAAc;AACpC,MAAI;AAAA,iBAC4B,MAAMP,KAAK,CAACQ,GAAN,uCAAyCD,EAAzC,EADlC;AAAA,UACYE,WADZ,QACMC,IADN;;AAEF,WAAOD,WAAP;AACD,GAHD,CAGE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACJ,CAPD;;AASA,MAAML,SAAS,GAAG,MAAOQ,QAAP,IAAoB;AAClC,MAAI;AAAA,kBACiB,MAAMd,KAAK,CAACQ,GAAN,yCAA2CM,QAA3C,EADvB;AAAA,UACQJ,IADR,SACQA,IADR;;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAI,CAAC,CAAD,CAAX;AACH,GALD,CAKE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,CATD","sourcesContent":["import axios from 'axios'\r\n\r\nexport default async function queryBackEnd(query, type) {\r\n    if (type === 'team') {\r\n        const result = await updatePlayerNames(query)\r\n        return result\r\n    }\r\n    return getPlayer(query)\r\n}\r\n\r\nconst updatePlayerNames = async (Id) => {\r\n    try {\r\n      const { data: playerNames } = await axios.get(`http://localhost:5000/teams/${Id}`)\r\n      return playerNames\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n}\r\n\r\nconst getPlayer = async (playerId) => {\r\n    try {\r\n        const { data } = await axios.get(`http://localhost:5000/players/${playerId}`)\r\n        console.log('http://localhost:5000/players/${playerId}')\r\n        console.log(data)\r\n        return data[0]\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}