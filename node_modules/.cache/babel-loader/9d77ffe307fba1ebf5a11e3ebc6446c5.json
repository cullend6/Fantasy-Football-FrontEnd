{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\fantasy-football-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\fantasy-football-app\\\\client\\\\src\\\\components\\\\PlayerSelector.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nexport default function PlayerSelector(props) {\n  const teamNames = ['Arsenal', 'Aston Villa', 'Bournemouth', 'Brighton', 'Burnley', 'Chelsea', 'Crystal Palace', 'Everton', 'Leicester City', 'Liverpool', 'Man City', 'Man Utd', 'Newcastle', 'Norwich', 'Sheffield Utd', 'Southampton', 'Spurs', 'Watford', 'West Ham', 'Wolves'];\n  const positions = ['gk', 'def', 'mid', 'fwd'];\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        teamId = _useState2[0],\n        setTeamId = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        playerId = _useState4[0],\n        setPlayerId = _useState4[1];\n\n  const _useState5 = useState([\"Mustafi\", \"Bellerín\", \"Kolasinac\", \"Maitland-Niles\", \"Sokratis\", \"Monreal\", \"Koscielny\", \"Mavropanos\", \"Jenkinson\", \"Holding\", \"Aubameyang\", \"Lacazette\", \"Nketiah\", \"Leno\", \"Özil\", \"Mkhitaryan\", \"Xhaka\", \"Torreira\", \"Elneny\", \"Guendouzi\", \"David Luiz\", \"Martínez\", \"Chambers\", \"Ceballos\", \"Pépé\", \"Nelson\", \"Willock\", \"Martinelli\", \"Tierney\"]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        playerNames = _useState6[0],\n        setPlayerNames = _useState6[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    getPlayer();\n  };\n\n  const updatePlayerNames = async Id => {\n    try {\n      console.log(Id, props.pos); // const { data: playerNames } = await axios.get(`http://localhost:5000/players/${Id}/${props.pos}`) \n\n      const _ref = await axios.get(\"http://localhost:5000/players/1/1\"),\n            playerNames = _ref.data; //setPlayerNames(playerNames)\n\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getPlayer = async () => {\n    const _ref2 = await axios.get(\"http://localhost:5000/players/\".concat(playerNames[playerId - 1])),\n          _ref2$data$ = _ref2.data[0],\n          total_points = _ref2$data$.total_points,\n          element_type = _ref2$data$.element_type;\n\n    console.log(playerNames[playerId - 1], total_points, positions[element_type - 1]);\n  };\n\n  const handleTeamChange = e => {\n    setTeamId(e.target.value);\n    updatePlayerNames(e.target.value);\n  };\n\n  const handlePlayerChange = e => {\n    setPlayerId(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: handleTeamChange,\n    value: teamId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, teamNames.map((name, index) => React.createElement(\"option\", {\n    value: index + 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, name))), React.createElement(\"select\", {\n    onChange: handlePlayerChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, playerNames.map((name, index) => React.createElement(\"option\", {\n    value: index + 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, name))), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))); // const [playerName, setPlayerName] = useState('')\n  // const [isValid, setIsValid] = useState(false)\n  // const types = ['GK', 'DEF', 'MID', 'FWD']\n  // const pos = types[props.type - 1]\n  // const handleClick = async () => {\n  //     try {\n  //       const { data: { [0]: { web_name, total_points, id, element_type } = {} } } = await axios.get(`http://localhost:5000/players/${playerName}`)\n  //       if(!web_name) {\n  //         throw new Error(`Can't find this player.`)\n  //       }\n  //       if(!(element_type == props.type)) {\n  //           console.log(element_type)\n  //         throw new Error(`${web_name} is not a ${pos}.`)\n  //       }\n  //       console.log(web_name, total_points, pos)  \n  //       setIsValid(true)\n  //     } catch (e) {\n  //       console.log(e)\n  //     }\n  //   }\n  //   const handleChange = (e) => {\n  //     setIsValid(false)\n  //     setPlayerName(e.target.value)\n  //   }\n  // return (\n  //     <div className=\"App\">\n  //         {pos}\n  //         <input value={playerName} onChange={handleChange}></input>\n  //         <button onClick={handleClick}>Check if valid</button>\n  //         {isValid ? 'Valid' : null}\n  //     </div>\n  // )\n}","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\components\\PlayerSelector.js"],"names":["React","useState","axios","PlayerSelector","props","teamNames","positions","teamId","setTeamId","playerId","setPlayerId","playerNames","setPlayerNames","handleSubmit","e","preventDefault","getPlayer","updatePlayerNames","Id","console","log","pos","get","data","total_points","element_type","handleTeamChange","target","value","handlePlayerChange","map","name","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nexport default function PlayerSelector(props) {\r\n\r\n\r\n  const teamNames = ['Arsenal', 'Aston Villa', 'Bournemouth', 'Brighton', 'Burnley', 'Chelsea', 'Crystal Palace', 'Everton', 'Leicester City', 'Liverpool', 'Man City', 'Man Utd', 'Newcastle', 'Norwich', 'Sheffield Utd', 'Southampton', 'Spurs', 'Watford', 'West Ham', 'Wolves']\r\n  const positions = ['gk', 'def', 'mid', 'fwd']\r\n\r\n  const [teamId, setTeamId] = useState(1)\r\n  const [playerId, setPlayerId] = useState(1)\r\n  const [playerNames, setPlayerNames] = useState([\"Mustafi\", \"Bellerín\", \"Kolasinac\", \"Maitland-Niles\", \"Sokratis\", \"Monreal\", \"Koscielny\", \"Mavropanos\", \"Jenkinson\", \"Holding\", \"Aubameyang\", \"Lacazette\", \"Nketiah\", \"Leno\", \"Özil\", \"Mkhitaryan\", \"Xhaka\", \"Torreira\", \"Elneny\", \"Guendouzi\", \"David Luiz\", \"Martínez\", \"Chambers\", \"Ceballos\", \"Pépé\", \"Nelson\", \"Willock\", \"Martinelli\", \"Tierney\"])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    getPlayer()\r\n  }\r\n\r\n  const updatePlayerNames = async (Id) => {\r\n    try {\r\n      console.log(Id, props.pos)\r\n      // const { data: playerNames } = await axios.get(`http://localhost:5000/players/${Id}/${props.pos}`) \r\n      const { data: playerNames } = await axios.get(`http://localhost:5000/players/1/1`) \r\n      //setPlayerNames(playerNames)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getPlayer = async () => {\r\n    const { data: { [0]: { total_points, element_type } } } = await axios.get(`http://localhost:5000/players/${playerNames[playerId - 1]}`)\r\n    console.log(playerNames[playerId - 1], total_points, positions[element_type - 1])\r\n  }\r\n\r\n  const handleTeamChange = (e) => {\r\n    setTeamId(e.target.value)\r\n    updatePlayerNames(e.target.value)\r\n  }\r\n\r\n  const handlePlayerChange = (e) => {\r\n    setPlayerId(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit}>\r\n           \r\n        <select onChange={handleTeamChange} value={teamId}>\r\n        {\r\n          teamNames.map((name, index) => <option value={ index + 1 }>{ name }</option>)\r\n        }\r\n        </select>\r\n        <select onChange={handlePlayerChange}>\r\n        {\r\n          playerNames.map((name, index) => <option value={ index + 1 }>{ name }</option>)\r\n        }\r\n        </select>\r\n\r\n        <input type='submit' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n\r\n    // const [playerName, setPlayerName] = useState('')\r\n    // const [isValid, setIsValid] = useState(false)\r\n\r\n    // const types = ['GK', 'DEF', 'MID', 'FWD']\r\n    // const pos = types[props.type - 1]\r\n\r\n    // const handleClick = async () => {\r\n    //     try {\r\n    //       const { data: { [0]: { web_name, total_points, id, element_type } = {} } } = await axios.get(`http://localhost:5000/players/${playerName}`)\r\n    \r\n    //       if(!web_name) {\r\n    //         throw new Error(`Can't find this player.`)\r\n    //       }\r\n    //       if(!(element_type == props.type)) {\r\n    //           console.log(element_type)\r\n    //         throw new Error(`${web_name} is not a ${pos}.`)\r\n    //       }\r\n          \r\n    //       console.log(web_name, total_points, pos)  \r\n    //       setIsValid(true)\r\n    //     } catch (e) {\r\n    //       console.log(e)\r\n    //     }\r\n    //   }\r\n    \r\n    //   const handleChange = (e) => {\r\n    //     setIsValid(false)\r\n    //     setPlayerName(e.target.value)\r\n    //   }\r\n\r\n    // return (\r\n    //     <div className=\"App\">\r\n    //         {pos}\r\n    //         <input value={playerName} onChange={handleChange}></input>\r\n    //         <button onClick={handleClick}>Check if valid</button>\r\n    //         {isValid ? 'Valid' : null}\r\n    //     </div>\r\n    // )\r\n}"]},"metadata":{},"sourceType":"module"}