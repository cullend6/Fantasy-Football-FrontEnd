{"ast":null,"code":"// export default function addToTeam(player, goalkeepers, midfielders, defenders, forwards) {\n//     const { element_type } = player\n//     if (element_type === 1) {\n//         if( goalkeepers.length === 2 ) {\n//             goalkeepers.shift()\n//             setGoalkeepers([...goalkeepers, player])\n//         } else {\n//             setGoalkeepers(goalkeepers => [...goalkeepers, player])\n//         }\n//     } else if (element_type === 2) {\n//         if( defenders.length === 5 ) {\n//             defenders.shift()\n//             setDefenders([...defenders, player])\n//         } else {\n//             setDefenders(defenders => [...defenders, player])\n//         }\n//     } else if (element_type === 3) {\n//         if( midfielders.length >= 5 ) {\n//             setTeamValue(teamValue - midfielders.shift().now_cost)\n//             setMidfielders([...midfielders, player])\n//         } else {\n//             setMidfielders(midfielders => [...midfielders, player])\n//         }\n//     } else {\n//         if( forwards.length === 3 ) {\n//             forwards.shift()\n//             setForwards([...forwards, player])\n//         } else {\n//             setForwards(forwards => [...forwards, player])\n//         }\n//     }\n// }\nexport default function addToTeam(player, currentPlayers, maxAmount, team) {\n  if (currentPlayers.length === maxAmount) {\n    currentPlayers.shift();\n    return [...currentPlayers, player];\n  }\n\n  const newPlayers = [...currentPlayers, player];\n  const teamValue = getTeamValue(team);\n  return {\n    newPlayers,\n    teamValue\n  };\n}\n\nconst getTeamValue = ({\n  goalkeepers,\n  defenders,\n  midfielders,\n  forwards\n}) => {\n  let gkVal = 0,\n      defVal = 0,\n      midVal = 0,\n      fwdVal = 0;\n  goalkeepers.forEach(gk => {\n    gkVal += gk.now_cost;\n  });\n  defenders.forEach(def => {\n    defVal += def.now_cost;\n  });\n  midfielders.forEach(mid => {\n    midVal += mid.now_cost;\n  });\n  forwards.forEach(fwd => {\n    fwdVal += fwd.now_cost;\n  });\n  return (gkVal + defVal + midVal + fwdVal) / 10;\n};","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\utils\\teamBuilderUtils.js"],"names":["addToTeam","player","currentPlayers","maxAmount","team","length","shift","newPlayers","teamValue","getTeamValue","goalkeepers","defenders","midfielders","forwards","gkVal","defVal","midVal","fwdVal","forEach","gk","now_cost","def","mid","fwd"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,cAA3B,EAA2CC,SAA3C,EAAsDC,IAAtD,EAA4D;AACvE,MAAIF,cAAc,CAACG,MAAf,KAA0BF,SAA9B,EAA0C;AACtCD,IAAAA,cAAc,CAACI,KAAf;AACA,WAAQ,CAAC,GAAGJ,cAAJ,EAAoBD,MAApB,CAAR;AACH;;AACD,QAAMM,UAAU,GAAG,CAAC,GAAGL,cAAJ,EAAoBD,MAApB,CAAnB;AACA,QAAMO,SAAS,GAAGC,YAAY,CAACL,IAAD,CAA9B;AAEA,SAAO;AAAEG,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAP;AACH;;AAED,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,WAA1B;AAAuCC,EAAAA;AAAvC,CAAD,KAAuD;AACxE,MAAIC,KAAK,GAAG,CAAZ;AAAA,MAAeC,MAAM,GAAG,CAAxB;AAAA,MAA2BC,MAAM,GAAG,CAApC;AAAA,MAAuCC,MAAM,GAAG,CAAhD;AACAP,EAAAA,WAAW,CAACQ,OAAZ,CAAoBC,EAAE,IAAI;AACtBL,IAAAA,KAAK,IAAIK,EAAE,CAACC,QAAZ;AACH,GAFD;AAGAT,EAAAA,SAAS,CAACO,OAAV,CAAkBG,GAAG,IAAI;AACrBN,IAAAA,MAAM,IAAIM,GAAG,CAACD,QAAd;AACH,GAFD;AAGAR,EAAAA,WAAW,CAACM,OAAZ,CAAoBI,GAAG,IAAI;AACvBN,IAAAA,MAAM,IAAIM,GAAG,CAACF,QAAd;AACH,GAFD;AAGAP,EAAAA,QAAQ,CAACK,OAAT,CAAiBK,GAAG,IAAI;AACpBN,IAAAA,MAAM,IAAIM,GAAG,CAACH,QAAd;AACH,GAFD;AAIA,SAAO,CAACN,KAAK,GAAGC,MAAR,GAAiBC,MAAjB,GAA0BC,MAA3B,IAAqC,EAA5C;AACH,CAhBD","sourcesContent":["// export default function addToTeam(player, goalkeepers, midfielders, defenders, forwards) {\r\n//     const { element_type } = player\r\n//     if (element_type === 1) {\r\n//         if( goalkeepers.length === 2 ) {\r\n//             goalkeepers.shift()\r\n//             setGoalkeepers([...goalkeepers, player])\r\n//         } else {\r\n//             setGoalkeepers(goalkeepers => [...goalkeepers, player])\r\n//         }\r\n//     } else if (element_type === 2) {\r\n//         if( defenders.length === 5 ) {\r\n//             defenders.shift()\r\n//             setDefenders([...defenders, player])\r\n//         } else {\r\n//             setDefenders(defenders => [...defenders, player])\r\n//         }\r\n//     } else if (element_type === 3) {\r\n//         if( midfielders.length >= 5 ) {\r\n//             setTeamValue(teamValue - midfielders.shift().now_cost)\r\n//             setMidfielders([...midfielders, player])\r\n//         } else {\r\n//             setMidfielders(midfielders => [...midfielders, player])\r\n//         }\r\n//     } else {\r\n//         if( forwards.length === 3 ) {\r\n//             forwards.shift()\r\n//             setForwards([...forwards, player])\r\n//         } else {\r\n//             setForwards(forwards => [...forwards, player])\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default function addToTeam(player, currentPlayers, maxAmount, team) {\r\n    if( currentPlayers.length === maxAmount ) {\r\n        currentPlayers.shift()     \r\n        return ([...currentPlayers, player])\r\n    } \r\n    const newPlayers = [...currentPlayers, player]\r\n    const teamValue = getTeamValue(team)\r\n\r\n    return { newPlayers, teamValue }\r\n}\r\n\r\nconst getTeamValue = ({ goalkeepers, defenders, midfielders, forwards }) => {\r\n    let gkVal = 0, defVal = 0, midVal = 0, fwdVal = 0\r\n    goalkeepers.forEach(gk => {\r\n        gkVal += gk.now_cost\r\n    })\r\n    defenders.forEach(def => {\r\n        defVal += def.now_cost\r\n    })\r\n    midfielders.forEach(mid => {\r\n        midVal += mid.now_cost\r\n    })\r\n    forwards.forEach(fwd => {\r\n        fwdVal += fwd.now_cost\r\n    })\r\n\r\n    return (gkVal + defVal + midVal + fwdVal) / 10\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}