{"ast":null,"code":"import axios from 'axios';\nexport default function queryBackEnd(query, type) {\n  if (type === 'team') {\n    return updatePlayerNames(query);\n  }\n\n  return getPlayer(query);\n}\n\nconst updatePlayerNames = async Id => {\n  try {\n    const _ref = await axios.get(\"http://localhost:5000/teams/\".concat(Id)),\n          playerNames = _ref.data;\n\n    console.log(\"http://localhost:5000/teams/\".concat(Id), playerNames);\n    return playerNames;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst getPlayer = async playerId => {\n  const _ref2 = await axios.get(\"http://localhost:5000/players/\".concat(playerId)),\n        data = _ref2.data;\n\n  return data[0];\n};","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\modules\\PlayerSelector.js"],"names":["axios","queryBackEnd","query","type","updatePlayerNames","getPlayer","Id","get","playerNames","data","console","log","e","playerId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,IAA7B,EAAmC;AAC9C,MAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,WAAOC,iBAAiB,CAACF,KAAD,CAAxB;AACH;;AACD,SAAOG,SAAS,CAACH,KAAD,CAAhB;AACH;;AAED,MAAME,iBAAiB,GAAG,MAAOE,EAAP,IAAc;AACpC,MAAI;AAAA,iBAC4B,MAAMN,KAAK,CAACO,GAAN,uCAAyCD,EAAzC,EADlC;AAAA,UACYE,WADZ,QACMC,IADN;;AAEFC,IAAAA,OAAO,CAACC,GAAR,uCAA2CL,EAA3C,GAAiDE,WAAjD;AACA,WAAOA,WAAP;AACD,GAJD,CAIE,OAAOI,CAAP,EAAU;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,CARH;;AAUA,MAAMP,SAAS,GAAG,MAAOQ,QAAP,IAAoB;AAAA,gBACjB,MAAMb,KAAK,CAACO,GAAN,yCAA2CM,QAA3C,EADW;AAAA,QAC1BJ,IAD0B,SAC1BA,IAD0B;;AAElC,SAAOA,IAAI,CAAC,CAAD,CAAX;AACD,CAHH","sourcesContent":["import axios from 'axios'\r\n\r\nexport default function queryBackEnd(query, type) {\r\n    if (type === 'team') {\r\n        return updatePlayerNames(query)\r\n    }\r\n    return getPlayer(query)\r\n}\r\n\r\nconst updatePlayerNames = async (Id) => {\r\n    try {\r\n      const { data: playerNames } = await axios.get(`http://localhost:5000/teams/${Id}`)\r\n      console.log(`http://localhost:5000/teams/${Id}`, playerNames)\r\n      return playerNames\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\nconst getPlayer = async (playerId) => {\r\n    const { data } = await axios.get(`http://localhost:5000/players/${playerId}`)\r\n    return data[0]\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}