{"ast":null,"code":"import axios from 'axios';\nexport default function get(query, player, fixtures) {\n  if (query === 'pic') {\n    return getPlayerSrc(player);\n  }\n\n  if (query === 'fixtures') {\n    getPlayerFixtures(player, fixtures);\n  } else {\n    return;\n  }\n}\n\nconst getPlayerSrc = ({\n  photo\n}) => {\n  const result = photo.replace('jpg', 'png');\n  return 'https://platform-static-files.s3.amazonaws.com/premierleague/photos/players/110x140/p' + result;\n};\n\nconst getPlayerFixtures = async ({\n  id\n}, fixtures) => {\n  const _ref = await axios.get('http://localhost:5000/players?fixtures=' + id),\n        fixtureData = _ref.data.fixtures;\n\n  const upcomingFixtures = fixtureData.filter((fixture, index) => index < 3);\n  const opponentIds = upcomingFixtures.map(fixture => fixture.is_home ? fixture.team_a : fixture.team_h);\n  const opponents = await getTeamNames(opponentIds); // setOpponents(opponents)\n\n  fixtures = opponents;\n  console.log(fixtures);\n};\n\nconst getTeamNames = async Ids => {\n  try {\n    const _ref2 = await axios.get(\"http://localhost:5000/teams\"),\n          data = _ref2.data;\n\n    const teamNames = data.map(team => team.name);\n    teamNames.sort();\n    const opponents = Ids.map(id => teamNames[id - 1]);\n    return opponents;\n  } catch (e) {}\n};","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\modules\\PlayerInfo.js"],"names":["axios","get","query","player","fixtures","getPlayerSrc","getPlayerFixtures","photo","result","replace","id","fixtureData","data","upcomingFixtures","filter","fixture","index","opponentIds","map","is_home","team_a","team_h","opponents","getTeamNames","console","log","Ids","teamNames","team","name","sort","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AACjD,MAAIF,KAAK,KAAK,KAAd,EAAqB;AACjB,WAAOG,YAAY,CAACF,MAAD,CAAnB;AACH;;AACD,MAAID,KAAK,KAAK,UAAd,EAA0B;AACtBI,IAAAA,iBAAiB,CAACH,MAAD,EAASC,QAAT,CAAjB;AACH,GAFD,MAEO;AACH;AACH;AACJ;;AAED,MAAMC,YAAY,GAAG,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAe;AAChC,QAAMC,MAAM,GAAGD,KAAK,CAACE,OAAN,CAAc,KAAd,EAAqB,KAArB,CAAf;AACA,SAAO,0FAA0FD,MAAjG;AACH,CAHD;;AAKA,MAAMF,iBAAiB,GAAG,OAAO;AAAEI,EAAAA;AAAF,CAAP,EAAeN,QAAf,KAA4B;AAAA,eACN,MAAMJ,KAAK,CAACC,GAAN,CAAU,4CAA4CS,EAAtD,CADA;AAAA,QACxBC,WADwB,QAC1CC,IAD0C,CAClCR,QADkC;;AAElD,QAAMS,gBAAgB,GAAGF,WAAW,CAACG,MAAZ,CAAmB,CAACC,OAAD,EAAUC,KAAV,KAAqBA,KAAK,GAAG,CAAhD,CAAzB;AACA,QAAMC,WAAW,GAAIJ,gBAAgB,CAACK,GAAjB,CAAqBH,OAAO,IAAIA,OAAO,CAACI,OAAR,GAAmBJ,OAAO,CAACK,MAA3B,GAAoCL,OAAO,CAACM,MAA5E,CAArB;AACA,QAAMC,SAAS,GAAG,MAAMC,YAAY,CAACN,WAAD,CAApC,CAJkD,CAKlD;;AACAb,EAAAA,QAAQ,GAAGkB,SAAX;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ;AACH,CARD;;AAUA,MAAMmB,YAAY,GAAG,MAAOG,GAAP,IAAe;AAChC,MAAI;AAAA,kBACiB,MAAM1B,KAAK,CAACC,GAAN,+BADvB;AAAA,UACQW,IADR,SACQA,IADR;;AAGA,UAAMe,SAAS,GAAGf,IAAI,CAACM,GAAL,CAASU,IAAI,IAAIA,IAAI,CAACC,IAAtB,CAAlB;AACAF,IAAAA,SAAS,CAACG,IAAV;AACA,UAAMR,SAAS,GAAGI,GAAG,CAACR,GAAJ,CAAQR,EAAE,IAAIiB,SAAS,CAACjB,EAAE,GAAC,CAAJ,CAAvB,CAAlB;AACA,WAAOY,SAAP;AACH,GAPD,CAOE,OAAOS,CAAP,EAAU,CAEX;AACJ,CAXD","sourcesContent":["import axios from 'axios'\r\n\r\nexport default function get(query, player, fixtures) {\r\n    if (query === 'pic') {\r\n        return getPlayerSrc(player)\r\n    }\r\n    if (query === 'fixtures') {\r\n        getPlayerFixtures(player, fixtures)\r\n    } else {\r\n        return\r\n    }\r\n}\r\n\r\nconst getPlayerSrc = ({ photo }) => {\r\n    const result = photo.replace('jpg', 'png')\r\n    return 'https://platform-static-files.s3.amazonaws.com/premierleague/photos/players/110x140/p' + result\r\n}\r\n\r\nconst getPlayerFixtures = async ({ id }, fixtures) => {\r\n    const { data: { fixtures: fixtureData } } = await axios.get('http://localhost:5000/players?fixtures=' + id)\r\n    const upcomingFixtures = fixtureData.filter((fixture, index) => (index < 3))\r\n    const opponentIds =  upcomingFixtures.map(fixture => fixture.is_home ?  fixture.team_a : fixture.team_h)\r\n    const opponents = await getTeamNames(opponentIds)\r\n    // setOpponents(opponents)\r\n    fixtures = opponents\r\n    console.log(fixtures)\r\n}\r\n\r\nconst getTeamNames = async (Ids) => {\r\n    try {\r\n        const { data } = await axios.get(`http://localhost:5000/teams`)\r\n        \r\n        const teamNames = data.map(team => team.name)\r\n        teamNames.sort()\r\n        const opponents = Ids.map(id => teamNames[id-1])\r\n        return opponents\r\n    } catch (e) {\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}