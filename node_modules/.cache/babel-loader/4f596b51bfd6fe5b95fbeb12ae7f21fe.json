{"ast":null,"code":"import axios from 'axios';\nexport default async function query(query, type, playerNames) {\n  if (type === 'team') {\n    const result = await updatePlayerNames(query);\n    return result;\n  }\n\n  return getPlayer(query, playerNames);\n}\n\nconst updatePlayerNames = async Id => {\n  try {\n    const _ref = await axios.get(\"http://localhost:5000/players?team=\".concat(Id)),\n          data = _ref.data;\n\n    const playerNames = data.map(player => player.web_name);\n    return playerNames;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst getPlayer = async (playerId, playerNames) => {\n  try {\n    const _ref2 = await axios.get(\"http://localhost:5000/players?name=\".concat(playerNames[playerId - 1])),\n          data = _ref2.data;\n\n    return data[0];\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\modules\\PlayerSelector.js"],"names":["axios","query","type","playerNames","result","updatePlayerNames","getPlayer","Id","get","data","map","player","web_name","e","console","log","playerId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,KAAf,CAAqBA,KAArB,EAA4BC,IAA5B,EAAkCC,WAAlC,EAA+C;AAC1D,MAAID,IAAI,KAAK,MAAb,EAAqB;AACjB,UAAME,MAAM,GAAG,MAAMC,iBAAiB,CAACJ,KAAD,CAAtC;AACA,WAAOG,MAAP;AACH;;AACD,SAAOE,SAAS,CAACL,KAAD,EAAQE,WAAR,CAAhB;AACH;;AAED,MAAME,iBAAiB,GAAG,MAAOE,EAAP,IAAc;AACpC,MAAI;AAAA,iBACiB,MAAMP,KAAK,CAACQ,GAAN,8CAAgDD,EAAhD,EADvB;AAAA,UACQE,IADR,QACQA,IADR;;AAEA,UAAMN,WAAW,GAAGM,IAAI,CAACC,GAAL,CAASC,MAAM,IAAIA,MAAM,CAACC,QAA1B,CAApB;AACA,WAAOT,WAAP;AACH,GAJD,CAIE,OAAOU,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,CARD;;AAUA,MAAMP,SAAS,GAAG,OAAOU,QAAP,EAAiBb,WAAjB,KAAiC;AAC/C,MAAI;AAAA,kBACiB,MAAMH,KAAK,CAACQ,GAAN,8CAAgDL,WAAW,CAACa,QAAQ,GAAG,CAAZ,CAA3D,EADvB;AAAA,UACQP,IADR,SACQA,IADR;;AAEA,WAAOA,IAAI,CAAC,CAAD,CAAX;AACH,GAHD,CAGE,OAAOI,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,CAPD","sourcesContent":["import axios from 'axios'\r\n\r\nexport default async function query(query, type, playerNames) {\r\n    if (type === 'team') {\r\n        const result = await updatePlayerNames(query)\r\n        return result\r\n    }\r\n    return getPlayer(query, playerNames)\r\n}\r\n\r\nconst updatePlayerNames = async (Id) => {\r\n    try {\r\n        const { data } = await axios.get(`http://localhost:5000/players?team=${Id}`)\r\n        const playerNames = data.map(player => player.web_name)\r\n        return playerNames\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nconst getPlayer = async (playerId, playerNames) => {\r\n    try {\r\n        const { data } = await axios.get(`http://localhost:5000/players?name=${playerNames[playerId - 1]}`)\r\n        return data[0]\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}