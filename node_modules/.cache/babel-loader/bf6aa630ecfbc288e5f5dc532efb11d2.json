{"ast":null,"code":"// export default function addToTeam(player, goalkeepers, midfielders, defenders, forwards) {\n//     const { element_type } = player\n//     if (element_type === 1) {\n//         if( goalkeepers.length === 2 ) {\n//             goalkeepers.shift()\n//             setGoalkeepers([...goalkeepers, player])\n//         } else {\n//             setGoalkeepers(goalkeepers => [...goalkeepers, player])\n//         }\n//     } else if (element_type === 2) {\n//         if( defenders.length === 5 ) {\n//             defenders.shift()\n//             setDefenders([...defenders, player])\n//         } else {\n//             setDefenders(defenders => [...defenders, player])\n//         }\n//     } else if (element_type === 3) {\n//         if( midfielders.length >= 5 ) {\n//             setTeamValue(teamValue - midfielders.shift().now_cost)\n//             setMidfielders([...midfielders, player])\n//         } else {\n//             setMidfielders(midfielders => [...midfielders, player])\n//         }\n//     } else {\n//         if( forwards.length === 3 ) {\n//             forwards.shift()\n//             setForwards([...forwards, player])\n//         } else {\n//             setForwards(forwards => [...forwards, player])\n//         }\n//     }\n// }\nexport default function addToTeam(player, currentPlayers, maxAmount) {\n  if (currentPlayers.length === maxAmount) {\n    currentPlayers.shift();\n    return [...currentPlayers, player];\n  }\n\n  return [...currentPlayers, player];\n}\n\nconst addPlayerToPosition = (player, currentPlayers, maxAmount) => {\n  if (currentPlayers.length === maxAmount) {\n    currentPlayers.shift();\n    return [...currentPlayers, player];\n  }\n\n  return [...currentPlayers, player];\n};","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\utils\\teamBuilderUtils.js"],"names":["addToTeam","player","currentPlayers","maxAmount","length","shift","addPlayerToPosition"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,cAA3B,EAA2CC,SAA3C,EAAsD;AACjE,MAAID,cAAc,CAACE,MAAf,KAA0BD,SAA9B,EAA0C;AACtCD,IAAAA,cAAc,CAACG,KAAf;AACA,WAAQ,CAAC,GAAGH,cAAJ,EAAoBD,MAApB,CAAR;AACH;;AACD,SAAO,CAAC,GAAGC,cAAJ,EAAoBD,MAApB,CAAP;AACH;;AAGD,MAAMK,mBAAmB,GAAG,CAACL,MAAD,EAASC,cAAT,EAAyBC,SAAzB,KAAuC;AAC/D,MAAID,cAAc,CAACE,MAAf,KAA0BD,SAA9B,EAA0C;AACtCD,IAAAA,cAAc,CAACG,KAAf;AACA,WAAQ,CAAC,GAAGH,cAAJ,EAAoBD,MAApB,CAAR;AACH;;AACD,SAAO,CAAC,GAAGC,cAAJ,EAAoBD,MAApB,CAAP;AACH,CAND","sourcesContent":["// export default function addToTeam(player, goalkeepers, midfielders, defenders, forwards) {\r\n//     const { element_type } = player\r\n//     if (element_type === 1) {\r\n//         if( goalkeepers.length === 2 ) {\r\n//             goalkeepers.shift()\r\n//             setGoalkeepers([...goalkeepers, player])\r\n//         } else {\r\n//             setGoalkeepers(goalkeepers => [...goalkeepers, player])\r\n//         }\r\n//     } else if (element_type === 2) {\r\n//         if( defenders.length === 5 ) {\r\n//             defenders.shift()\r\n//             setDefenders([...defenders, player])\r\n//         } else {\r\n//             setDefenders(defenders => [...defenders, player])\r\n//         }\r\n//     } else if (element_type === 3) {\r\n//         if( midfielders.length >= 5 ) {\r\n//             setTeamValue(teamValue - midfielders.shift().now_cost)\r\n//             setMidfielders([...midfielders, player])\r\n//         } else {\r\n//             setMidfielders(midfielders => [...midfielders, player])\r\n//         }\r\n//     } else {\r\n//         if( forwards.length === 3 ) {\r\n//             forwards.shift()\r\n//             setForwards([...forwards, player])\r\n//         } else {\r\n//             setForwards(forwards => [...forwards, player])\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default function addToTeam(player, currentPlayers, maxAmount) {\r\n    if( currentPlayers.length === maxAmount ) {\r\n        currentPlayers.shift()     \r\n        return ([...currentPlayers, player])\r\n    } \r\n    return [...currentPlayers, player]\r\n}\r\n\r\n\r\nconst addPlayerToPosition = (player, currentPlayers, maxAmount) => {\r\n    if( currentPlayers.length === maxAmount ) {\r\n        currentPlayers.shift()     \r\n        return ([...currentPlayers, player])\r\n    } \r\n    return [...currentPlayers, player]\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}