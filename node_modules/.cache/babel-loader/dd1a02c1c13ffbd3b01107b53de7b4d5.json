{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\fantasy-football-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\fantasy-football-app\\\\frontend\\\\src\\\\components\\\\PlayerSelector.js\";\nimport React, { useState } from 'react';\nimport query from '../modules/PlayerSelector';\nexport default function PlayerSelector(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        teamNames = _useState2[0],\n        setTeamNames = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        playerId = _useState6[0],\n        setPlayerId = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        playerNames = _useState8[0],\n        setPlayerNames = _useState8[1];\n\n  const getInitialState = async () => {\n    const teamNames = await query(0, 'teams');\n    setTeamNames(teamNames);\n    const playerNames = await query(1, 'team');\n    setPlayerNames(playerNames);\n    setLoading(false);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await query(playerId, 'player', playerNames);\n    props.addPlayer(result);\n  };\n\n  const handleTeamChange = async e => {\n    const result = await query(e.target.value, 'team');\n    setPlayerNames(result);\n  };\n\n  const handlePlayerChange = e => {\n    setPlayerId(e.target.value);\n  };\n\n  let body = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Loading...\");\n\n  if (loading) {\n    getInitialState();\n  } else {\n    body = React.createElement(\"div\", {\n      className: \"player-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"dropdown\",\n      onChange: handleTeamChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, teamNames.map((name, index) => React.createElement(\"option\", {\n      value: index + 1,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, name))), React.createElement(\"select\", {\n      className: \"dropdown\",\n      onChange: handlePlayerChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, playerNames.map((name, index) => React.createElement(\"option\", {\n      value: index + 1,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, name))), React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Add Player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n  return body;\n}","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\frontend\\src\\components\\PlayerSelector.js"],"names":["React","useState","query","PlayerSelector","props","teamNames","setTeamNames","loading","setLoading","playerId","setPlayerId","playerNames","setPlayerNames","getInitialState","handleSubmit","e","preventDefault","result","addPlayer","handleTeamChange","target","value","handlePlayerChange","body","map","name","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport query from '../modules/PlayerSelector'\r\n\r\nexport default function PlayerSelector(props) {\r\n\r\n  const [teamNames, setTeamNames] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [playerId, setPlayerId] = useState(1)\r\n  const [playerNames, setPlayerNames] = useState([])\r\n\r\n  const getInitialState = async () => {\r\n    const teamNames = await query(0, 'teams')\r\n    setTeamNames(teamNames)\r\n    const playerNames = await query(1, 'team')\r\n    setPlayerNames(playerNames)\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const result = await query(playerId, 'player', playerNames)\r\n    props.addPlayer(result)\r\n  }\r\n\r\n  const handleTeamChange = async (e) => {\r\n    const result = await query(e.target.value, 'team') \r\n    setPlayerNames(result)\r\n  }\r\n\r\n  const handlePlayerChange = (e) => {\r\n    setPlayerId(e.target.value)\r\n  }\r\n\r\n  let body = <div>Loading...</div>\r\n\r\n  if (loading) {\r\n    getInitialState()\r\n  } else {\r\n    body = <div className='player-selector'>\r\n    <form onSubmit={handleSubmit}>\r\n\r\n      <select className='dropdown' onChange={handleTeamChange} >\r\n      {\r\n        teamNames.map((name, index) => <option value={ index + 1 } key={index}>{ name }</option>)\r\n        }\r\n      </select>\r\n      <select className='dropdown' onChange={handlePlayerChange}>\r\n      {\r\n        playerNames.map((name, index) => <option value={ index + 1 } key={index}>{ name }</option>)\r\n      }\r\n      </select>\r\n      <input className='button' type='submit' value='Add Player' />\r\n    </form>\r\n  </div>\r\n  }\r\n\r\n  return body\r\n}"]},"metadata":{},"sourceType":"module"}