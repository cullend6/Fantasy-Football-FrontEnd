{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\fantasy-football-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\fantasy-football-app\\\\client\\\\src\\\\components\\\\PlayerSelector.js\";\nimport React, { useState } from 'react';\nimport query from '../modules/PlayerSelector';\nexport default async function PlayerSelector(props) {\n  const teamNames = ['Arsenal', 'Aston Villa', 'Bournemouth', 'Brighton', 'Burnley', 'Chelsea', 'Crystal Palace', 'Everton', 'Leicester City', 'Liverpool', 'Man City', 'Man Utd', 'Newcastle', 'Norwich', 'Sheffield Utd', 'Southampton', 'Spurs', 'Watford', 'West Ham', 'Wolves'];\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        playerId = _useState4[0],\n        setPlayerId = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        playerNames = _useState6[0],\n        setPlayerNames = _useState6[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await query(playerId, 'player', playerNames);\n    props.addPlayer(result);\n  };\n\n  const handleTeamChange = async e => {\n    const result = await query(e.target.value, 'team');\n    setPlayerNames(result);\n  };\n\n  const handlePlayerChange = e => {\n    setPlayerId(e.target.value);\n  };\n\n  let body = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n\n  if (loading) {\n    const result = await query(1, 'team');\n    setPlayerNames(result);\n    setLoading(false);\n    body = React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: handleTeamChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, teamNames.map((name, index) => React.createElement(\"option\", {\n      value: index + 1,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, name))), React.createElement(\"select\", {\n      onChange: handlePlayerChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, playerNames.map((name, index) => React.createElement(\"option\", {\n      value: index + 1,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, name))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n\n  return body;\n}","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\components\\PlayerSelector.js"],"names":["React","useState","query","PlayerSelector","props","teamNames","loading","setLoading","playerId","setPlayerId","playerNames","setPlayerNames","handleSubmit","e","preventDefault","result","addPlayer","handleTeamChange","target","value","handlePlayerChange","body","map","name","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,eAAe,eAAeC,cAAf,CAA8BC,KAA9B,EAAqC;AAElD,QAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,aAAZ,EAA2B,aAA3B,EAA0C,UAA1C,EAAsD,SAAtD,EAAiE,SAAjE,EAA4E,gBAA5E,EAA8F,SAA9F,EAAyG,gBAAzG,EAA2H,WAA3H,EAAwI,UAAxI,EAAoJ,SAApJ,EAA+J,WAA/J,EAA4K,SAA5K,EAAuL,eAAvL,EAAwM,aAAxM,EAAuN,OAAvN,EAAgO,SAAhO,EAA2O,UAA3O,EAAuP,QAAvP,CAAlB;;AAFkD,oBAIpBJ,QAAQ,CAAC,IAAD,CAJY;AAAA;AAAA,QAI3CK,OAJ2C;AAAA,QAIlCC,UAJkC;;AAAA,qBAKlBN,QAAQ,CAAC,CAAD,CALU;AAAA;AAAA,QAK3CO,QAL2C;AAAA,QAKjCC,WALiC;;AAAA,qBAMZR,QAAQ,CAAC,EAAD,CANI;AAAA;AAAA,QAM3CS,WAN2C;AAAA,QAM9BC,cAN8B;;AAQlD,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAG,MAAMb,KAAK,CAACM,QAAD,EAAW,QAAX,EAAqBE,WAArB,CAA1B;AACAN,IAAAA,KAAK,CAACY,SAAN,CAAgBD,MAAhB;AACD,GAJD;;AAMA,QAAME,gBAAgB,GAAG,MAAOJ,CAAP,IAAa;AACpC,UAAME,MAAM,GAAG,MAAMb,KAAK,CAACW,CAAC,CAACK,MAAF,CAASC,KAAV,EAAiB,MAAjB,CAA1B;AACAR,IAAAA,cAAc,CAACI,MAAD,CAAd;AACD,GAHD;;AAKA,QAAMK,kBAAkB,GAAIP,CAAD,IAAO;AAChCJ,IAAAA,WAAW,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,MAAIE,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;;AAEA,MAAIf,OAAJ,EAAa;AACX,UAAMS,MAAM,GAAG,MAAMb,KAAK,CAAC,CAAD,EAAI,MAAJ,CAA1B;AACAS,IAAAA,cAAc,CAACI,MAAD,CAAd;AACAR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAc,IAAAA,IAAI,GAAG;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAM,MAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAQ,MAAA,QAAQ,EAAEK,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEZ,SAAS,CAACiB,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAQ,MAAA,KAAK,EAAGA,KAAK,GAAG,CAAxB;AAA4B,MAAA,GAAG,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CD,IAA1C,CAA/B,CAFF,CAFF,EAOE;AAAQ,MAAA,QAAQ,EAAEH,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEV,WAAW,CAACY,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAQ,MAAA,KAAK,EAAGA,KAAK,GAAG,CAAxB;AAA4B,MAAA,GAAG,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CD,IAA1C,CAAjC,CAFF,CAPF,EAYE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADH,CAAP;AAgBD;;AAED,SAAOF,IAAP;AACD","sourcesContent":["import React, { useState } from 'react'\r\nimport query from '../modules/PlayerSelector'\r\n\r\nexport default async function PlayerSelector(props) {\r\n\r\n  const teamNames = ['Arsenal', 'Aston Villa', 'Bournemouth', 'Brighton', 'Burnley', 'Chelsea', 'Crystal Palace', 'Everton', 'Leicester City', 'Liverpool', 'Man City', 'Man Utd', 'Newcastle', 'Norwich', 'Sheffield Utd', 'Southampton', 'Spurs', 'Watford', 'West Ham', 'Wolves']\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [playerId, setPlayerId] = useState(1)\r\n  const [playerNames, setPlayerNames] = useState([])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const result = await query(playerId, 'player', playerNames)\r\n    props.addPlayer(result)\r\n  }\r\n\r\n  const handleTeamChange = async (e) => {\r\n    const result = await query(e.target.value, 'team') \r\n    setPlayerNames(result)\r\n  }\r\n\r\n  const handlePlayerChange = (e) => {\r\n    setPlayerId(e.target.value)\r\n  }\r\n\r\n  let body = <div></div>\r\n\r\n  if (loading) {\r\n    const result = await query(1, 'team') \r\n    setPlayerNames(result)\r\n    setLoading(false)\r\n    body = <div className=\"App\">\r\n              <form onSubmit={handleSubmit}>\r\n        \r\n                <select onChange={handleTeamChange} >\r\n                {\r\n                  teamNames.map((name, index) => <option value={ index + 1 } key={index}>{ name }</option>)\r\n                  }\r\n                </select>\r\n                <select onChange={handlePlayerChange}>\r\n                {\r\n                  playerNames.map((name, index) => <option value={ index + 1 } key={index}>{ name }</option>)\r\n                }\r\n                </select>\r\n                <input type='submit' value='Add Player' />\r\n              </form>\r\n            </div>\r\n  }\r\n\r\n  return body\r\n}"]},"metadata":{},"sourceType":"module"}