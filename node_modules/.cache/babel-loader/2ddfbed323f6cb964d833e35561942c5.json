{"ast":null,"code":"export default function addToTeam(player, currentPlayers, maxAmount, team) {\n  const prevPlayers = currentPlayers;\n  console.log(prevPlayers);\n  const prevValue = getTeamValue(team, currentPlayers, 4);\n  let newPlayers = [];\n\n  if (currentPlayers.length === maxAmount) {\n    currentPlayers.shift();\n    newPlayers = [...currentPlayers, player];\n  }\n\n  newPlayers = [...currentPlayers, player];\n  const newValue = getTeamValue(team, newPlayers, player.element_type - 1);\n  let result = {};\n  validateTeam(newPlayers, newValue, prevPlayers, player) ? result = {\n    newPlayers,\n    newValue\n  } : result = {\n    newPlayers: prevPlayers,\n    newValue: prevValue\n  };\n  return result;\n} // Abstract cause mad gross ------------------------------------------------------------\n\nconst getTeamValue = ({\n  goalkeepers,\n  defenders,\n  midfielders,\n  forwards\n}, newPlayers, position) => {\n  let gkVal = 0,\n      defVal = 0,\n      midVal = 0,\n      fwdVal = 0,\n      newPlayersVal = 0;\n  goalkeepers.forEach(gk => {\n    gkVal += gk.now_cost;\n  });\n  defenders.forEach(def => {\n    defVal += def.now_cost;\n  });\n  midfielders.forEach(mid => {\n    midVal += mid.now_cost;\n  });\n  forwards.forEach(fwd => {\n    fwdVal += fwd.now_cost;\n  });\n  newPlayers.forEach(player => {\n    newPlayersVal += player.now_cost;\n  });\n  const totals = [gkVal, defVal, midVal, fwdVal, newPlayersVal];\n  totals[position] = 0;\n  return totals.reduce((a, b) => a + b, 0) / 10;\n};\n\nconst validateTeam = (newPlayers, teamValue, prevPlayers, player) => {\n  if (teamValue > 100) {\n    console.log('Team value too high.');\n    return false;\n  }\n\n  if (isPlayerInTeam(player, prevPlayers)) {\n    console.log('Player already in team.');\n  }\n\n  return true;\n};\n\nconst isPlayerInTeam = (prevPlayers, player) => {\n  const playerIds = prevPlayers.map(player => player.id);\n  return playerIds.includes(player.id);\n};","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\modules\\TeamSelector.js"],"names":["addToTeam","player","currentPlayers","maxAmount","team","prevPlayers","console","log","prevValue","getTeamValue","newPlayers","length","shift","newValue","element_type","result","validateTeam","goalkeepers","defenders","midfielders","forwards","position","gkVal","defVal","midVal","fwdVal","newPlayersVal","forEach","gk","now_cost","def","mid","fwd","totals","reduce","a","b","teamValue","isPlayerInTeam","playerIds","map","id","includes"],"mappings":"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","sourcesContent":["export default function addToTeam(player, currentPlayers, maxAmount, team) {\r\n    const prevPlayers = currentPlayers\r\n    console.log(prevPlayers)\r\n    const prevValue = getTeamValue(team, currentPlayers, 4)\r\n    let newPlayers = []\r\n    if( currentPlayers.length === maxAmount ) {\r\n        currentPlayers.shift()     \r\n        newPlayers = [...currentPlayers, player]\r\n    } \r\n    newPlayers = [...currentPlayers, player]\r\n\r\n    const newValue = getTeamValue(team, newPlayers, player.element_type - 1)\r\n\r\n    let result = {}\r\n    validateTeam(newPlayers, newValue, prevPlayers, player) ? result = { newPlayers, newValue } : result = { newPlayers: prevPlayers, newValue: prevValue }\r\n\r\n    return result\r\n}\r\n\r\n\r\n// Abstract cause mad gross ------------------------------------------------------------\r\nconst getTeamValue = ({ goalkeepers, defenders, midfielders, forwards }, newPlayers, position) => {\r\n\r\n    let gkVal = 0, defVal = 0, midVal = 0, fwdVal = 0, newPlayersVal = 0\r\n    goalkeepers.forEach(gk => {\r\n        gkVal += gk.now_cost\r\n    })\r\n    defenders.forEach(def => {\r\n        defVal += def.now_cost\r\n    })\r\n    midfielders.forEach(mid => {\r\n        midVal += mid.now_cost\r\n    })\r\n    forwards.forEach(fwd => {\r\n        fwdVal += fwd.now_cost\r\n    })\r\n    newPlayers.forEach(player => {\r\n        newPlayersVal += player.now_cost\r\n    })\r\n\r\n    const totals = [gkVal, defVal, midVal, fwdVal, newPlayersVal]\r\n    totals[position] = 0\r\n    return totals.reduce((a,b) => a + b, 0) / 10\r\n}\r\n\r\n\r\nconst validateTeam = (newPlayers, teamValue, prevPlayers, player) => {\r\n    if (teamValue > 100) {\r\n        console.log('Team value too high.')\r\n        return false\r\n    }\r\n    if (isPlayerInTeam(player, prevPlayers)) {\r\n        console.log('Player already in team.')\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nconst isPlayerInTeam = (prevPlayers, player) => {\r\n    const playerIds = prevPlayers.map(player => player.id)\r\n    return (playerIds.includes(player.id))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}