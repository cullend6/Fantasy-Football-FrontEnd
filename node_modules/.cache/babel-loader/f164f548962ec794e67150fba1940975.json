{"ast":null,"code":"export default function addToTeam(player, currentPlayers, maxAmount, team) {\n  const prevPlayers = currentPlayers;\n  console.log(currentPlayers);\n  const prevValue = getTeamValue(team, currentPlayers, 4);\n  let newPlayers = [];\n\n  if (currentPlayers.length === maxAmount) {\n    currentPlayers.shift();\n    newPlayers = [...currentPlayers, player];\n  }\n\n  newPlayers = [...currentPlayers, player];\n  const newValue = getTeamValue(team, newPlayers, player.element_type - 1);\n  let result = {};\n\n  const _validateTeam = validateTeam(newPlayers, newValue, prevPlayers, player, team),\n        isValidated = _validateTeam.isValidated,\n        message = _validateTeam.message;\n\n  isValidated ? result = {\n    newPlayers,\n    newValue\n  } : result = {\n    newPlayers: prevPlayers,\n    newValue: prevValue,\n    message\n  };\n  return result;\n} // Abstract cause mad gross ------------------------------------------------------------\n\nconst getTeamValue = ({\n  goalkeepers,\n  defenders,\n  midfielders,\n  forwards\n}, newPlayers, position) => {\n  let gkVal = 0,\n      defVal = 0,\n      midVal = 0,\n      fwdVal = 0,\n      newPlayersVal = 0;\n  goalkeepers.forEach(gk => {\n    gkVal += gk.now_cost;\n  });\n  defenders.forEach(def => {\n    defVal += def.now_cost;\n  });\n  midfielders.forEach(mid => {\n    midVal += mid.now_cost;\n  });\n  forwards.forEach(fwd => {\n    fwdVal += fwd.now_cost;\n  });\n  newPlayers.forEach(player => {\n    newPlayersVal += player.now_cost;\n  });\n  const totals = [gkVal, defVal, midVal, fwdVal, newPlayersVal];\n  totals[position] = 0;\n  return totals.reduce((a, b) => a + b, 0) / 10;\n};\n\nconst validateTeam = (teamValue, prevPlayers, player, team) => {\n  const teamNames = ['Arsenal', 'Aston Villa', 'Bournemouth', 'Brighton', 'Burnley', 'Chelsea', 'Crystal Palace', 'Everton', 'Leicester City', 'Liverpool', 'Man City', 'Man Utd', 'Newcastle', 'Norwich', 'Sheffield Utd', 'Southampton', 'Spurs', 'Watford', 'West Ham', 'Wolves'];\n\n  if (teamValue > 100) {\n    return {\n      isValidated: false,\n      message: 'Team value too high.'\n    };\n  }\n\n  if (isPlayerInTeam(player, prevPlayers)) {\n    return {\n      result: false,\n      message: \"\".concat(player.web_name, \" already in team.\")\n    };\n  }\n\n  if (tooManyPlayersFromOneTeamToInsert(player, team)) {\n    return {\n      result: false,\n      message: \"Already three players from \".concat(teamNames[player.team - 1], \".\")\n    };\n  }\n\n  return {\n    isValidated: true,\n    message: null\n  };\n};\n\nconst isPlayerInTeam = (player, prevPlayers = []) => {\n  const playerIds = prevPlayers.map(player => player.id);\n  return playerIds.includes(player.id);\n};\n\nconst tooManyPlayersFromOneTeamToInsert = (player, team) => {\n  const values = Object.values(team);\n  const teamIds = values.map(positions => positions.map(player => player.team));\n  const flattenedTeamIds = [].concat.apply([], teamIds);\n\n  if (flattenedTeamIds.filter(id => id === player.team).length > 2) {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\modules\\TeamSelector.js"],"names":["addToTeam","player","currentPlayers","maxAmount","team","prevPlayers","console","log","prevValue","getTeamValue","newPlayers","length","shift","newValue","element_type","result","validateTeam","isValidated","message","goalkeepers","defenders","midfielders","forwards","position","gkVal","defVal","midVal","fwdVal","newPlayersVal","forEach","gk","now_cost","def","mid","fwd","totals","reduce","a","b","teamValue","teamNames","isPlayerInTeam","web_name","tooManyPlayersFromOneTeamToInsert","playerIds","map","id","includes","values","Object","teamIds","positions","flattenedTeamIds","concat","apply","filter"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,cAA3B,EAA2CC,SAA3C,EAAsDC,IAAtD,EAA4D;AACvE,QAAMC,WAAW,GAAGH,cAApB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AACA,QAAMM,SAAS,GAAGC,YAAY,CAACL,IAAD,EAAOF,cAAP,EAAuB,CAAvB,CAA9B;AACA,MAAIQ,UAAU,GAAG,EAAjB;;AACA,MAAIR,cAAc,CAACS,MAAf,KAA0BR,SAA9B,EAA0C;AACtCD,IAAAA,cAAc,CAACU,KAAf;AACAF,IAAAA,UAAU,GAAG,CAAC,GAAGR,cAAJ,EAAoBD,MAApB,CAAb;AACH;;AACDS,EAAAA,UAAU,GAAG,CAAC,GAAGR,cAAJ,EAAoBD,MAApB,CAAb;AAEA,QAAMY,QAAQ,GAAGJ,YAAY,CAACL,IAAD,EAAOM,UAAP,EAAmBT,MAAM,CAACa,YAAP,GAAsB,CAAzC,CAA7B;AAEA,MAAIC,MAAM,GAAG,EAAb;;AAbuE,wBActCC,YAAY,CAACN,UAAD,EAAaG,QAAb,EAAuBR,WAAvB,EAAoCJ,MAApC,EAA4CG,IAA5C,CAd0B;AAAA,QAc/Da,WAd+D,iBAc/DA,WAd+D;AAAA,QAclDC,OAdkD,iBAclDA,OAdkD;;AAevED,EAAAA,WAAW,GAAGF,MAAM,GAAG;AAAEL,IAAAA,UAAF;AAAcG,IAAAA;AAAd,GAAZ,GAAuCE,MAAM,GAAG;AAAEL,IAAAA,UAAU,EAAEL,WAAd;AAA2BQ,IAAAA,QAAQ,EAAEL,SAArC;AAAgDU,IAAAA;AAAhD,GAA3D;AACA,SAAOH,MAAP;AACH,C,CAED;;AACA,MAAMN,YAAY,GAAG,CAAC;AAAEU,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,WAA1B;AAAuCC,EAAAA;AAAvC,CAAD,EAAoDZ,UAApD,EAAgEa,QAAhE,KAA6E;AAE9F,MAAIC,KAAK,GAAG,CAAZ;AAAA,MAAeC,MAAM,GAAG,CAAxB;AAAA,MAA2BC,MAAM,GAAG,CAApC;AAAA,MAAuCC,MAAM,GAAG,CAAhD;AAAA,MAAmDC,aAAa,GAAG,CAAnE;AACAT,EAAAA,WAAW,CAACU,OAAZ,CAAoBC,EAAE,IAAI;AACtBN,IAAAA,KAAK,IAAIM,EAAE,CAACC,QAAZ;AACH,GAFD;AAGAX,EAAAA,SAAS,CAACS,OAAV,CAAkBG,GAAG,IAAI;AACrBP,IAAAA,MAAM,IAAIO,GAAG,CAACD,QAAd;AACH,GAFD;AAGAV,EAAAA,WAAW,CAACQ,OAAZ,CAAoBI,GAAG,IAAI;AACvBP,IAAAA,MAAM,IAAIO,GAAG,CAACF,QAAd;AACH,GAFD;AAGAT,EAAAA,QAAQ,CAACO,OAAT,CAAiBK,GAAG,IAAI;AACpBP,IAAAA,MAAM,IAAIO,GAAG,CAACH,QAAd;AACH,GAFD;AAGArB,EAAAA,UAAU,CAACmB,OAAX,CAAmB5B,MAAM,IAAI;AACzB2B,IAAAA,aAAa,IAAI3B,MAAM,CAAC8B,QAAxB;AACH,GAFD;AAIA,QAAMI,MAAM,GAAG,CAACX,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,aAAhC,CAAf;AACAO,EAAAA,MAAM,CAACZ,QAAD,CAAN,GAAmB,CAAnB;AACA,SAAOY,MAAM,CAACC,MAAP,CAAc,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAAGC,CAA3B,EAA8B,CAA9B,IAAmC,EAA1C;AACH,CAtBD;;AAwBA,MAAMtB,YAAY,GAAG,CAACuB,SAAD,EAAYlC,WAAZ,EAAyBJ,MAAzB,EAAiCG,IAAjC,KAA0C;AAC3D,QAAMoC,SAAS,GAAG,CAAC,SAAD,EAAY,aAAZ,EAA2B,aAA3B,EAA0C,UAA1C,EAAsD,SAAtD,EAAiE,SAAjE,EAA4E,gBAA5E,EAA8F,SAA9F,EAAyG,gBAAzG,EAA2H,WAA3H,EAAwI,UAAxI,EAAoJ,SAApJ,EAA+J,WAA/J,EAA4K,SAA5K,EAAuL,eAAvL,EAAwM,aAAxM,EAAuN,OAAvN,EAAgO,SAAhO,EAA2O,UAA3O,EAAuP,QAAvP,CAAlB;;AACA,MAAID,SAAS,GAAG,GAAhB,EAAqB;AACjB,WAAO;AAAEtB,MAAAA,WAAW,EAAE,KAAf;AAAsBC,MAAAA,OAAO,EAAE;AAA/B,KAAP;AACH;;AACD,MAAIuB,cAAc,CAACxC,MAAD,EAASI,WAAT,CAAlB,EAAyC;AACrC,WAAO;AAAEU,MAAAA,MAAM,EAAE,KAAV;AAAiBG,MAAAA,OAAO,YAAKjB,MAAM,CAACyC,QAAZ;AAAxB,KAAP;AACH;;AACD,MAAIC,iCAAiC,CAAC1C,MAAD,EAASG,IAAT,CAArC,EAAqD;AACjD,WAAO;AAAEW,MAAAA,MAAM,EAAE,KAAV;AAAiBG,MAAAA,OAAO,uCAAgCsB,SAAS,CAACvC,MAAM,CAACG,IAAP,GAAY,CAAb,CAAzC;AAAxB,KAAP;AACH;;AACD,SAAO;AAAEa,IAAAA,WAAW,EAAE,IAAf;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAAP;AACH,CAZD;;AAcA,MAAMuB,cAAc,GAAG,CAACxC,MAAD,EAASI,WAAW,GAAG,EAAvB,KAA8B;AACjD,QAAMuC,SAAS,GAAGvC,WAAW,CAACwC,GAAZ,CAAgB5C,MAAM,IAAIA,MAAM,CAAC6C,EAAjC,CAAlB;AACA,SAAQF,SAAS,CAACG,QAAV,CAAmB9C,MAAM,CAAC6C,EAA1B,CAAR;AACH,CAHD;;AAKA,MAAMH,iCAAiC,GAAG,CAAC1C,MAAD,EAASG,IAAT,KAAkB;AACxD,QAAM4C,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAc5C,IAAd,CAAf;AACA,QAAM8C,OAAO,GAAGF,MAAM,CAACH,GAAP,CAAWM,SAAS,IAAIA,SAAS,CAACN,GAAV,CAAc5C,MAAM,IAAIA,MAAM,CAACG,IAA/B,CAAxB,CAAhB;AACA,QAAMgD,gBAAgB,GAAG,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBJ,OAApB,CAAzB;;AAEA,MAAIE,gBAAgB,CAACG,MAAjB,CAAwBT,EAAE,IAAIA,EAAE,KAAK7C,MAAM,CAACG,IAA5C,EAAkDO,MAAlD,GAA2D,CAA/D,EAAkE;AAC9D,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CATD","sourcesContent":["export default function addToTeam(player, currentPlayers, maxAmount, team) {\r\n    const prevPlayers = currentPlayers\r\n    console.log(currentPlayers)\r\n    const prevValue = getTeamValue(team, currentPlayers, 4)\r\n    let newPlayers = []\r\n    if( currentPlayers.length === maxAmount ) {\r\n        currentPlayers.shift()     \r\n        newPlayers = [...currentPlayers, player]\r\n    } \r\n    newPlayers = [...currentPlayers, player]\r\n\r\n    const newValue = getTeamValue(team, newPlayers, player.element_type - 1)\r\n\r\n    let result = {}\r\n    const { isValidated, message } = validateTeam(newPlayers, newValue, prevPlayers, player, team) \r\n    isValidated ? result = { newPlayers, newValue } : result = { newPlayers: prevPlayers, newValue: prevValue, message }\r\n    return result\r\n}\r\n\r\n// Abstract cause mad gross ------------------------------------------------------------\r\nconst getTeamValue = ({ goalkeepers, defenders, midfielders, forwards }, newPlayers, position) => {\r\n\r\n    let gkVal = 0, defVal = 0, midVal = 0, fwdVal = 0, newPlayersVal = 0\r\n    goalkeepers.forEach(gk => {\r\n        gkVal += gk.now_cost\r\n    })\r\n    defenders.forEach(def => {\r\n        defVal += def.now_cost\r\n    })\r\n    midfielders.forEach(mid => {\r\n        midVal += mid.now_cost\r\n    })\r\n    forwards.forEach(fwd => {\r\n        fwdVal += fwd.now_cost\r\n    })\r\n    newPlayers.forEach(player => {\r\n        newPlayersVal += player.now_cost\r\n    })\r\n\r\n    const totals = [gkVal, defVal, midVal, fwdVal, newPlayersVal]\r\n    totals[position] = 0\r\n    return totals.reduce((a,b) => a + b, 0) / 10\r\n}\r\n\r\nconst validateTeam = (teamValue, prevPlayers, player, team) => {\r\n    const teamNames = ['Arsenal', 'Aston Villa', 'Bournemouth', 'Brighton', 'Burnley', 'Chelsea', 'Crystal Palace', 'Everton', 'Leicester City', 'Liverpool', 'Man City', 'Man Utd', 'Newcastle', 'Norwich', 'Sheffield Utd', 'Southampton', 'Spurs', 'Watford', 'West Ham', 'Wolves']\r\n    if (teamValue > 100) {\r\n        return { isValidated: false, message: 'Team value too high.' }\r\n    }\r\n    if (isPlayerInTeam(player, prevPlayers)) {\r\n        return { result: false, message: `${player.web_name} already in team.` }\r\n    }\r\n    if (tooManyPlayersFromOneTeamToInsert(player, team)) {\r\n        return { result: false, message: `Already three players from ${teamNames[player.team-1]}.` }\r\n    }\r\n    return { isValidated: true, message: null }\r\n}\r\n\r\nconst isPlayerInTeam = (player, prevPlayers = []) => {\r\n    const playerIds = prevPlayers.map(player => player.id)\r\n    return (playerIds.includes(player.id))\r\n}\r\n\r\nconst tooManyPlayersFromOneTeamToInsert = (player, team) => {\r\n    const values = Object.values(team)\r\n    const teamIds = values.map(positions => positions.map(player => player.team))\r\n    const flattenedTeamIds = [].concat.apply([], teamIds)\r\n    \r\n    if (flattenedTeamIds.filter(id => id === player.team).length > 2) {\r\n        return true\r\n    }\r\n    return false\r\n}"]},"metadata":{},"sourceType":"module"}