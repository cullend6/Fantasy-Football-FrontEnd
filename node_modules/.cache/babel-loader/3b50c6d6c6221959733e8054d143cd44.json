{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\fantasy-football-app\\\\client\\\\src\\\\components\\\\PlayerSelector.js\";\nimport React, { useState } from 'react';\nexport default function PlayerSelector(props) {\n  const types = ['GK', 'DEF', 'MID', 'FWD'];\n\n  const handleClick = async () => {\n    try {\n      const _ref = await axios.get(\"http://localhost:5000/players/\".concat(GK1)),\n            _ref$data$ = _ref.data[0],\n            _ref$data$2 = _ref$data$ === void 0 ? {} : _ref$data$,\n            web_name = _ref$data$2.web_name,\n            total_points = _ref$data$2.total_points,\n            id = _ref$data$2.id,\n            element_type = _ref$data$2.element_type;\n\n      if (!web_name) {\n        throw new Error(\"Can't find this player.\");\n      }\n\n      if (!(element_type == props.type)) {\n        throw new Error(\"\".concat(web_name, \" is not a \").concat(types[props.type - 1], \".\"));\n      }\n\n      console.log(web_name, total_points, id, element_type);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = e => {\n    setGK1(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: GK1,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"request\"));\n}","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\components\\PlayerSelector.js"],"names":["React","useState","PlayerSelector","props","types","handleClick","axios","get","GK1","data","web_name","total_points","id","element_type","Error","type","console","log","e","handleChange","setGK1","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE1C,QAAMC,KAAK,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,CAAd;;AAEA,QAAMC,WAAW,GAAG,YAAY;AAC5B,QAAI;AAAA,mBAC2E,MAAMC,KAAK,CAACC,GAAN,yCAA2CC,GAA3C,EADjF;AAAA,8BACMC,IADN,CACe,CADf;AAAA,kDACkE,EADlE;AAAA,YACqBC,QADrB,eACqBA,QADrB;AAAA,YAC+BC,YAD/B,eAC+BA,YAD/B;AAAA,YAC6CC,EAD7C,eAC6CA,EAD7C;AAAA,YACiDC,YADjD,eACiDA,YADjD;;AAGF,UAAG,CAACH,QAAJ,EAAc;AACZ,cAAM,IAAII,KAAJ,2BAAN;AACD;;AACD,UAAG,EAAED,YAAY,IAAIV,KAAK,CAACY,IAAxB,CAAH,EAAkC;AAChC,cAAM,IAAID,KAAJ,WAAaJ,QAAb,uBAAkCN,KAAK,CAACD,KAAK,CAACY,IAAN,GAAW,CAAZ,CAAvC,OAAN;AACD;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBC,YAAtB,EAAoCC,EAApC,EAAwCC,YAAxC;AACD,KAXD,CAWE,OAAOK,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,GAfH;;AAiBE,QAAMC,YAAY,GAAID,CAAD,IAAO;AAC1BE,IAAAA,MAAM,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAN;AACD,GAFD;;AAIF,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAEd,GAAd;AAAmB,IAAA,QAAQ,EAAEW,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAEd,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ;AAMH","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function PlayerSelector(props) {\r\n        \r\n    const types = ['GK', 'DEF', 'MID', 'FWD']\r\n\r\n    const handleClick = async () => {\r\n        try {\r\n          const { data: { [0]: { web_name, total_points, id, element_type } = {} } } = await axios.get(`http://localhost:5000/players/${GK1}`)\r\n    \r\n          if(!web_name) {\r\n            throw new Error(`Can't find this player.`)\r\n          }\r\n          if(!(element_type == props.type)) {\r\n            throw new Error(`${web_name} is not a ${types[props.type-1]}.`)\r\n          }\r\n          \r\n          console.log(web_name, total_points, id, element_type)  \r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      }\r\n    \r\n      const handleChange = (e) => {\r\n        setGK1(e.target.value)\r\n      }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <input value={GK1} onChange={handleChange}></input>\r\n            <button onClick={handleClick}>request</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}