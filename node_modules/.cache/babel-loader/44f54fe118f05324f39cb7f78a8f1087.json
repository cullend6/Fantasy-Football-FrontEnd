{"ast":null,"code":"// export default function addToTeam(player, goalkeepers, midfielders, defenders, forwards) {\n//     const { element_type } = player\n//     if (element_type === 1) {\n//         if( goalkeepers.length === 2 ) {\n//             goalkeepers.shift()\n//             setGoalkeepers([...goalkeepers, player])\n//         } else {\n//             setGoalkeepers(goalkeepers => [...goalkeepers, player])\n//         }\n//     } else if (element_type === 2) {\n//         if( defenders.length === 5 ) {\n//             defenders.shift()\n//             setDefenders([...defenders, player])\n//         } else {\n//             setDefenders(defenders => [...defenders, player])\n//         }\n//     } else if (element_type === 3) {\n//         if( midfielders.length >= 5 ) {\n//             setTeamValue(teamValue - midfielders.shift().now_cost)\n//             setMidfielders([...midfielders, player])\n//         } else {\n//             setMidfielders(midfielders => [...midfielders, player])\n//         }\n//     } else {\n//         if( forwards.length === 3 ) {\n//             forwards.shift()\n//             setForwards([...forwards, player])\n//         } else {\n//             setForwards(forwards => [...forwards, player])\n//         }\n//     }\n// }\nexport default function addToTeam(player, team) {\n  const position = player.element_type;\n  const currentPlayers = team[position + 1];\n\n  switch (position) {\n    case 1:\n      console.log([addGk(player, currentPlayers)]);\n      return team[position + 1] = [addGk(player, currentPlayers)];\n\n    case 2: //return addGk(player, currentPlayers)\n\n  }\n}\n\nconst addGk = (player, goalkeepers = []) => {\n  if (goalkeepers.length === 2) {\n    goalkeepers.shift();\n    return [...goalkeepers, player];\n  }\n\n  console.log([...goalkeepers, player]);\n  return [...goalkeepers, player];\n};","map":{"version":3,"sources":["C:\\Projects\\fantasy-football-app\\client\\src\\utils\\teamBuilderUtils.js"],"names":["addToTeam","player","team","position","element_type","currentPlayers","console","log","addGk","goalkeepers","length","shift"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAgC;AAAA,QACrBC,QADqB,GACRF,MADQ,CACnCG,YADmC;AAE3C,QAAMC,cAAc,GAAGH,IAAI,CAAEC,QAAQ,GAAG,CAAb,CAA3B;;AACA,UAAQA,QAAR;AACI,SAAK,CAAL;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAa,CAACC,KAAK,CAACP,MAAD,EAASI,cAAT,CAAN,CAAb;AACA,aAAOH,IAAI,CAAGC,QAAQ,GAAG,CAAd,CAAJ,GAAuB,CAACK,KAAK,CAACP,MAAD,EAASI,cAAT,CAAN,CAA9B;;AACJ,SAAK,CAAL,CAJJ,CAKQ;;AALR;AAOH;;AAED,MAAMG,KAAK,GAAG,CAACP,MAAD,EAASQ,WAAW,GAAG,EAAvB,KAA8B;AACxC,MAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA+B;AAC3BD,IAAAA,WAAW,CAACE,KAAZ;AAEA,WAAQ,CAAC,GAAGF,WAAJ,EAAiBR,MAAjB,CAAR;AACH;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGE,WAAJ,EAAiBR,MAAjB,CAAZ;AACA,SAAO,CAAC,GAAGQ,WAAJ,EAAiBR,MAAjB,CAAP;AACH,CARD","sourcesContent":["// export default function addToTeam(player, goalkeepers, midfielders, defenders, forwards) {\r\n//     const { element_type } = player\r\n//     if (element_type === 1) {\r\n//         if( goalkeepers.length === 2 ) {\r\n//             goalkeepers.shift()\r\n//             setGoalkeepers([...goalkeepers, player])\r\n//         } else {\r\n//             setGoalkeepers(goalkeepers => [...goalkeepers, player])\r\n//         }\r\n//     } else if (element_type === 2) {\r\n//         if( defenders.length === 5 ) {\r\n//             defenders.shift()\r\n//             setDefenders([...defenders, player])\r\n//         } else {\r\n//             setDefenders(defenders => [...defenders, player])\r\n//         }\r\n//     } else if (element_type === 3) {\r\n//         if( midfielders.length >= 5 ) {\r\n//             setTeamValue(teamValue - midfielders.shift().now_cost)\r\n//             setMidfielders([...midfielders, player])\r\n//         } else {\r\n//             setMidfielders(midfielders => [...midfielders, player])\r\n//         }\r\n//     } else {\r\n//         if( forwards.length === 3 ) {\r\n//             forwards.shift()\r\n//             setForwards([...forwards, player])\r\n//         } else {\r\n//             setForwards(forwards => [...forwards, player])\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default function addToTeam(player, team){\r\n    const { element_type: position } = player\r\n    const currentPlayers = team [position + 1]\r\n    switch (position) {\r\n        case 1:\r\n            console.log ([addGk(player, currentPlayers)])\r\n            return team [ position + 1] = [addGk(player, currentPlayers)]\r\n        case 2:\r\n            //return addGk(player, currentPlayers)\r\n    }\r\n}\r\n\r\nconst addGk = (player, goalkeepers = []) => {\r\n    if( goalkeepers.length === 2 ) {\r\n        goalkeepers.shift()\r\n        \r\n        return ([...goalkeepers, player])\r\n    } \r\n    console.log([...goalkeepers, player])\r\n    return [...goalkeepers, player]\r\n}"]},"metadata":{},"sourceType":"module"}